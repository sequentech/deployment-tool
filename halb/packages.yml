# This file is part of deployment-tool.
# Copyright (C) 2014-2016  Sequent Tech Inc <legal@sequentech.io>

# deployment-tool is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License.

# deployment-tool  is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public License
# along with deployment-tool.  If not, see <http://www.gnu.org/licenses/>.

---
- name: High Availability & Load Balancing, Updating packages
  become: true
  apt:
    update_cache: yes

- name: High Availability & Load Balancing, Installing packages
  become: true
  apt:
    pkg:
      - memcached
      - rsync
      - libedit-dev
      - libpam-dev
      - libselinux-dev
      - postgresql-server-dev-12
      - libkrb5-dev
      - flex
    state: present

- name: High Availability & Load Balancing, non-local memcached.conf
  lineinfile:
    dest: dest=/etc/sudoers
    state: absent
    line: "-l 127.0.0.1"

- name: High Availability & Load Balancing, Restart memcached
  become: true
  service:
    name: memcached
    state: restarted

- name: High Availability & Load Balancing, Create ssh key for ballotbox, postgres
  become: true
  user:
    name: "{{item}}"
    generate_ssh_key: yes
    state: present
    ssh_key_type: rsa
    ssh_key_comment: "{{ item }}@{{ ansible_nodename }}/ansible-generated"
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa
  with_items:
   - ballotbox
   - postgres

- name: High Availability & Load Balancing [master], Authorizing ballotbox slave keys
  become: true
  when: config.load_balancing.enabled and config.load_balancing.is_master
  authorized_key:
    user: ballotbox
    key: "{{ item }}"
  with_items: "{{ config.load_balancing.master.slave_ballotbox_ssh_keys }}"

- name: High Availability & Load Balancing [master], Authorizing postgres slave keys
  become: true
  when: config.load_balancing.enabled and config.load_balancing.is_master
  authorized_key:
    user: postgres
    key: "{{ item }}"
  with_items: "{{ config.load_balancing.master.slave_postgres_ssh_keys }}"

- name: High Availability & Load Balancing [slave], Authorizing postgres slave keys
  become: true
  become_user: postgres
  when: config.load_balancing.enabled and not config.load_balancing.is_master
  shell: |
    expect -c '
    spawn ssh postgres@{{config.load_balancing.slave.master_hostname}} echo hola
    expect {
    yes/no { send yes\r ; exp_continue}
    }'
  register: command_result
  failed_when: "'hola' not in command_result.stdout or 'password:' in command_result.stdout"

- name: High Availability & Load Balancing [slave], Authorizing ballotbox slave keys
  become: true
  become_user: ballotbox
  when: config.load_balancing.enabled and not config.load_balancing.is_master
  shell: |
    expect -c '
    spawn ssh ballotbox@{{config.load_balancing.slave.master_hostname}} echo hola
    expect {
    yes/no { send yes\r ; exp_continue}
    }'
  register: command_result
  failed_when: "'hola' not in command_result.stdout or 'password:' in command_result.stdout"
