# This file is part of deployment-tool.
# Copyright (C) 2014-2016  Sequent Tech Inc <legal@sequentech.io>

# deployment-tool is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License.

# deployment-tool  is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public License
# along with deployment-tool.  If not, see <http://www.gnu.org/licenses/>.

{% if not config.load_balancing.enabled or config.load_balancing.use_https %}
server {
     listen      80;
     server_name    {{ config.ballot_box.domain }};
     ## redirect http to https ##
     rewrite ^ https://$server_name$request_uri? permanent;
}
{% endif %}

server {
    {% if not config.load_balancing.enabled or config.load_balancing.use_https %}
    listen              443;
    include             /etc/nginx/secure.conf;
    {% else %}
    listen              80;
    {% endif %}

    server_name         {{ config.ballot_box.domain }};

    {% if config.load_balancing.enabled %}
    set_real_ip_from   {{ config.load_balancing.loadbalancers_cidr }};
    real_ip_header     {{ config.load_balancing.load_balancer_real_ip_header }};
    {% endif %}

    {% if config.cloudflare %}
    include /etc/nginx/cloudflare.conf;
    {% endif %}

    {% if config.webserver.reverse_proxy_cache %}
    # cache config
    proxy_cache_key         "$scheme$host$uri$is_args$args";
    proxy_cache             STATIC;
    proxy_cache_valid       any {{ config.ballot_box.cache_expiration_seconds }}s;
    proxy_cache_min_uses    3;
    proxy_cache_bypass      $http_authorization;
    proxy_cache_use_stale   error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_lock        on;
    add_header              X-Cache-Status  $upstream_cache_status;
    add_header              X-CACHE-KEY     $scheme$host$uri$is_args$args;
    {% endif %}

    # maintenance page configuration
    if (-f /etc/nginx/conf.d/maintenance.on) {
        return 503;
    }

    error_page 503 @maintenance_page;

    location /maintenance {
        root /usr/share/nginx/html/;
        rewrite ^(.*)$ /maintenance.html break;
    }

    location @maintenance_page {
        root /usr/share/nginx/html/;
        rewrite ^(.*)$ /maintenance.html break;
    }

    # redirect default to admin login
    location / {
      rewrite ^/$ {{ config.sequent_ui.defaultRoute }} last;
    }

    # sequent-ui
    location /admin/ {
        include     /etc/nginx/cors.conf;

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=static_files {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        proxy_pass http://127.0.0.1:{{ config.sequent_ui.admin_port }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% if config.http.http_auth %}
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        {% endif %}

        {% if config.http.admin_zone.enabled %}
        {% for rule in config.http.admin_zone.rules %}
        {{ rule }};
        {% endfor %}
        {% endif %}

        {% for allow_ip in config.sequent_ui.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.sequent_ui.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }

    location /booth/ {
        include     /etc/nginx/cors.conf;

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=static_files {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        proxy_pass http://127.0.0.1:{{ config.sequent_ui.booth_port }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% if config.http.http_auth %}
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        {% endif %}

        {% for allow_ip in config.sequent_ui.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.sequent_ui.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }

    location /election/ {
        include     /etc/nginx/cors.conf;

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=static_files {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        proxy_pass http://127.0.0.1:{{ config.sequent_ui.elections_port }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% if config.http.http_auth %}
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        {% endif %}

        {% for allow_ip in config.sequent_ui.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.sequent_ui.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }

    # iam
    location /iam/ {
        include     /etc/nginx/cors.conf;
        if ($is_admin_request = 1) {
            return 403;
        }

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=user_api {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        proxy_pass http://127.0.0.1:10081/iam/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% for allow_ip in config.iam.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.iam.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }
    location /admin-api/iam/ {
        include     /etc/nginx/cors.conf;

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=admin_api {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        proxy_pass http://127.0.0.1:10081/iam/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% if config.http.admin_zone.enabled %}
        {% for rule in config.http.admin_zone.rules %}
        {{ rule }};
        {% endfor %}
        {% endif %}

        {% for allow_ip in config.iam.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.iam.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }

    location /static/ {
        include     /etc/nginx/cors.conf;

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=static_files {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        proxy_pass http://127.0.0.1:10081/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        {% if config.http.http_auth %}
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        {% endif %}

        {% for allow_ip in config.iam.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.iam.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }

    # ballot_box
    location /elections/ {
        include     /etc/nginx/cors.conf;
        if ($is_admin_request = 1) {
            return 403;
        }

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=user_api {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}


        proxy_pass http://127.0.0.1:{{ config.ballot_box.port }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% for allow_ip in config.ballot_box.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.ballot_box.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }
    location /admin-api/elections/ {
        include     /etc/nginx/cors.conf;

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=admin_api {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        proxy_pass http://127.0.0.1:{{ config.ballot_box.port }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% if config.http.admin_zone.enabled %}
        {% for rule in config.http.admin_zone.rules %}
        {{ rule }};
        {% endfor %}
        {% endif %}

        {% for allow_ip in config.ballot_box.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.ballot_box.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }

    # election-verifier
    location /verifier/ {
        include     /etc/nginx/cors.conf;

        {% if config.hardening.nginx_rate_limit.enabled %}
        limit_req zone=static_files {{config.hardening.nginx_rate_limit.static_files_config}};
        {% endif %}

        alias /home/verifier_user/dist/;
        
        {% if config.http.http_auth %}
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        {% endif %}

        {% for allow_ip in config.sequent_ui.ips.allow %}
        allow {{allow_ip}};
        {% endfor %}
        {% for deny_ip in config.sequent_ui.ips.deny %}
        deny {{deny_ip}};
        {% endfor %}
    }
}

## Sentry cloudflare ##
server {
    listen               {{ config.sentry.web_port }};
    {% if not config.load_balancing.enabled or config.load_balancing.use_https %}
    include             /etc/nginx/secure.conf;
    {% endif %}

    {% if config.hardening.nginx_rate_limit.enabled %}
    limit_req zone=admin_api {{config.hardening.nginx_rate_limit.static_files_config}};
    {% endif %}

    server_name         {{ config.sentry.domain }};

    {% if config.load_balancing.enabled %}
    set_real_ip_from   {{ config.load_balancing.loadbalancers_cidr }};
    real_ip_header     {{ config.load_balancing.load_balancer_real_ip_header }};
    {% endif %}

    {% if config.cloudflare %}
    include /etc/nginx/cloudflare.conf;
    {% endif %}

    {% for allow_ip in config.sentry.ips.allow %}
    allow {{allow_ip}};
    {% endfor %}
    {% for deny_ip in config.sentry.ips.deny %}
    deny {{deny_ip}};
    {% endfor %}

    location / {
            proxy_pass http://localhost:{{ config.sentry.port }};

            # NOTE: $server_port needs to be set here instead of using just
            # $host as usual, or else it might be lost during redirections.
            # Solution found here:
            # http://stackoverflow.com/questions/3391986/http-post-drops-port-in-url
            proxy_set_header Host $http_host;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
{% if config.dnie_auth.allow %}
# DNIE iam
server {
    server_name  {{ config.dnie_host }};
    listen               443;
    include             /etc/nginx/secure.conf;

    {% if config.hardening.nginx_rate_limit.enabled %}
    limit_req zone=user_api {{config.hardening.nginx_rate_limit.static_files_config}};
    {% endif %}

    ssl_client_certificate /srv/certs/dnie.ca.crt;
    ssl_verify_client on;

    # Certificate authentication
    location /iam/ {
            proxy_pass http://127.0.0.1:10081/iam/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header ssl-verify $ssl_client_verify;
            proxy_set_header ssl-client-cert $ssl_client_cert;
            proxy_set_header ssl-client-raw-cert $ssl_client_raw_cert;
            proxy_set_header ssl-client-s-dn $ssl_client_s_dn;
            proxy_set_header ssl-client-i-dn $ssl_client_i_dn;
    }
}
{% endif %}
