---
- name: Sentry, Sentry installation
  sudo: true
  sudo_user: sentry
  pip: name=sentry[postgres] virtualenv=/home/sentry/venv

- name: Sentry, Creating conf
  sudo: true
  template: src=sentry/templates/sentry.conf.py dest=/home/sentry/sentry.conf.py owner="sentry" mode=0644

- name: Sentry, Create Database User
  sudo: true
  sudo_user: postgres
  when: config.load_balancing.is_master
  postgresql_user: user=sentry password='{{config.sentry_db_password}}' port=5432

- name: Sentry, Create Database
  sudo: true
  sudo_user: postgres
  when: config.load_balancing.is_master
  postgresql_db:
    name=sentry
    owner=sentry
    encoding="utf-8"
    lc_collate='en_US.UTF-8'
    lc_ctype='en_US.UTF-8'
    template='template0'
    state=present

- name: Sentry upgrade
  sudo: true
  sudo_user: sentry
  when: config.load_balancing.is_master
  shell: /home/sentry/venv/bin/sentry --config=/home/sentry/sentry.conf.py upgrade --noinput

- name: Sentry, creating the first user
  sudo: true
  sudo_user: sentry
  when: config.load_balancing.is_master
  shell: /home/sentry/venv/bin/sentry --config=/home/sentry/sentry.conf.py createuser --no-input --email='{{ config.sentry_admin_user }}' --superuser --password='{{ config.sentry_admin_password }}'
  register: command_result
  failed_when:
    - "'already exists' not in command_result.stderr"
    - "command_result.rc != 0"
